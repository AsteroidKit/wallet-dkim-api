/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ED25519",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ED25519__factory>;
    getContractFactory(
      name: "SHA1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SHA1__factory>;
    getContractFactory(
      name: "SHA512",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SHA512__factory>;
    getContractFactory(
      name: "DkimChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DkimChecker__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "DkimCheckerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DkimCheckerInterface__factory>;
    getContractFactory(
      name: "SCW",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SCW__factory>;
    getContractFactory(
      name: "SCWDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SCWDeployer__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ED25519",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ED25519>;
    getContractAt(
      name: "SHA1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SHA1>;
    getContractAt(
      name: "SHA512",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SHA512>;
    getContractAt(
      name: "DkimChecker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DkimChecker>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "DkimCheckerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DkimCheckerInterface>;
    getContractAt(
      name: "SCW",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SCW>;
    getContractAt(
      name: "SCWDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SCWDeployer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
